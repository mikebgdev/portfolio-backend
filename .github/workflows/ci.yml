name: Portfolio CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.11"

jobs:
  validate:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_portfolio_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
        echo "POSTGRES_USER=test_user" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=test_password" >> $GITHUB_ENV
        echo "POSTGRES_DB=test_portfolio_db" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
        echo "DEBUG=True" >> $GITHUB_ENV

    - name: Run database migrations
      run: |
        alembic upgrade head

    - name: Validate application startup
      run: |
        # Test that the application can start
        timeout 10 python -c "from app.main import app; import uvicorn; uvicorn.run(app, host='0.0.0.0', port=8000)" &
        APP_PID=$!
        
        # Wait for application to start
        sleep 5
        
        # Test basic endpoints
        curl -f http://localhost:8000/ || echo "Root endpoint not available"
        curl -f http://localhost:8000/health || echo "Health endpoint not available"
        curl -f http://localhost:8000/admin/ || echo "Admin panel not available"
        
        # Cleanup
        kill $APP_PID 2>/dev/null || true

    - name: Check code quality
      run: |
        pip install flake8
        # Basic code style check (ignore line length for now)
        flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics

  deploy:
    runs-on: ubuntu-latest
    needs: [validate]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy notification
      run: |
        echo "âœ… Validation passed - Application ready for deployment"
        echo "ðŸš€ Deploy with: uvicorn app.main:app --host 0.0.0.0 --port 8000"
        echo "ðŸ”§ Admin panel: http://your-server:8000/admin/"
        echo "ðŸ“š API docs: http://your-server:8000/docs"